17-07-04

java spring 환경설정


spring 은 ioc컨테이너

외부에서 주입.

Setter() or Construct() 에 외부에서 넣어줌


스프링에서는 XML에서 주입을 해줌

객체하나하나를 BEAN이라고 생각.
Id는 유니크한 값,class는 전체를 다써줘야함
아마 객체 생성같음.



메인에서
String configLocation = "classpath:applicationCTX.xml";
		AbstractApplicationContext ctx=new GenericXmlApplicationContext(configLocation);
		StudentInfo studentInfo = ctx.getBean("studentInfo", StudentInfo.class);
		studentInfo.getStudentInfo();
    이렇게 xml파일에서 불러온다 java의 객체생성과는 다른방식.
 


Property 는 필드 
ex)
Calculator calculator;
private int firstNum;
private int secondNum;
Ref bean => 참조

스프링에서 xml에서 bean을 생성해서 만들때 필드에대한 setter가 있어야함

	<bean id="calculator" class="com.javalec.ex.Calculator" />
	
	<bean id="myCalculator" class="com.javalec.ex.MyCalculator">
		<property name="calculator">
			<ref bean="calculator"/>
		</property>
		<property name="firstNum" value="10" />
		<property name="secondNum" value="2"></property>
	</bean>


	setFirstNum => set을 빼고 F를f로 바꿔서 firstNum
	
	firstNum=setFirstNum()
	secondNum=setSecondNum()
  
  xml 에서 객체의 값을 주면서 초기화를 해줌 
물론 setter 가 있어야 쓸수있음!!!

public void setFirstNum(int firstNum) {
		this.firstNum = firstNum;
	}



		<property name="firstNum" value="10"></property>
		<property name="secondNum" value="2"></property>
	
  
  
  
  		보면 myinfo 는 BMICalculator를 사용함 그래서 

	private String name;
	private double height;
	private double weight;
	private ArrayList<String> hobbys;
	private BMICalculator bmiCalculator;

이렇게 선언할때
	<bean id="myInfo" class="com.javalec.ex.MyInfo">
		<property name="name">
			<value>홍길동</value>
		</property>
		<property name="height">
			<value>187</value>
		</property>
		<property name="weight">
			<value>84</value>
		</property>
		<property name="hobbys">
			<list>
				<value>수영</value>
				<value>요리</value>
				<value>독서</value>
			</list>
		</property>
		
		<property name="bmiCalculator">
			<ref bean="bmiCalculator"/>
		</property>
	</bean>

이렇게 ref bean="bmiCalculator" 를 사용해줘야함

그리고 ArrayList를 사용했을때는 <list></list>로 써준다.


public interface Pencil {
	public void use();

}
public class Pencil4B implements Pencil{

	
	@Override
	public void use(){
		System.out.println("4B 굵기로 쓰입니다.");
	}
}

이런 식으로 메인은 안고치고 xml 만 수정하는게 더 편리하고 좋다.
